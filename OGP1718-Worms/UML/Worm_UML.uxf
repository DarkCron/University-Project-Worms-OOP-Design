<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>7</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>224</x>
      <y>406</y>
      <w>189</w>
      <h>231</h>
    </coordinates>
    <panel_attributes>/GameObject/
--
location
radius
mass
fromWorld
bTerminated
--
getAlpha()
setAlpha(alpha)
/isValidAlpha(alpha)/
removeFromWorld(World) {TODO def}
/terminate()/ {TODO}
isTerminated() {TODO}
isOverlapping(GameObject) {TODO}



</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>224</x>
      <y>700</y>
      <w>140</w>
      <h>161</h>
    </coordinates>
    <panel_attributes>Food
--
--
consumeFood(Worm)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>392</x>
      <y>700</y>
      <w>154</w>
      <h>161</h>
    </coordinates>
    <panel_attributes>Worm
--
hitpoints {TODO, integer}
INIT_MIN_HP = 1000
INIT_MAX_HP = 2000
wormTeam
--
static generateRandomHP(min,max) {TODO total}
getHP() {TODO}
setHP(amount) {TODO total}
getTeam() {TODO}
setTeam(team) {TODO}</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>259</x>
      <y>630</y>
      <w>21</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;100.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>259</x>
      <y>630</y>
      <w>182</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>240.0;100.0;240.0;40.0;10.0;40.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>560</x>
      <y>406</y>
      <w>231</w>
      <h>224</h>
    </coordinates>
    <panel_attributes>World
--
width
height
[][] passableMap
set&lt;GameObjects&gt;
final static MAX_TEAMS = 10
currentAmountOfTeams = 0
worldTeams[MAX_TEAMS]
--
isWithinWorld(GameObject) {TODO def}
removeFromWorld(GameObject) {TODO def}
hasAsGameObject(GameObject, class) {TODO -self-
//So you give an object and what class it's supposed to be
//pro's very extensible and a single function for all
//different types of gameobjects
//con's, none really, more difficult I guess.
getAllGameObjects(class) {TODO DEF -self-}
//See above
isAdjacentToImpTerrain(area, center, radius) {TODO}
isOnPassableTerrain(area, center, radius) {TODO}
startGame(???)
finishGame(???)
//hasActiveGame from Facade manages whether a game is going on
//or not. With this the game figures out whether a game has
//been won.
gameHasWinner()
//This function should be called when switching worms to check
//whether there's only 1 worm left or whether all living worms
//are from the same team

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>406</x>
      <y>448</y>
      <w>168</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>lt=-
m1=0..1
m2=0..n
Exists in &gt;
&lt; For</panel_attributes>
    <additional_attributes>10.0;20.0;220.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>210</x>
      <y>371</y>
      <w>1190</w>
      <h>581</h>
    </coordinates>
    <panel_attributes>Worms.Model
--
bg=orange
layer=-2</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>952</x>
      <y>406</y>
      <w>203</w>
      <h>224</h>
    </coordinates>
    <panel_attributes>Team
//EVERYTHING DEFENSIVELY
--
list&lt;Worm&gt; teamList
final name
bTerminated
--
canChangeTeamName()
isValidTeamName(string)
getName()
setName(name)
isWormNameInTeam(name)
//All worm names inside a team should be unique
getWorms()
addWorms(Worm... worms)
removeWorms(Worm...worms)
mergeTeams(otherTeam)
getWormTeamIndex(name)
//Figure out the spot for a worm in a team based on it's 
//name. Returns -1 if the worm's name is already in the list.
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>784</x>
      <y>406</y>
      <w>182</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>lt=-
m2=0..MAX_TEAMS
contains &gt;</panel_attributes>
    <additional_attributes>10.0;130.0;80.0;130.0;80.0;10.0;240.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>210</x>
      <y>0</y>
      <w>1106</w>
      <h>350</h>
    </coordinates>
    <panel_attributes>Worms.ValueData
--
bg=orange
layer=-1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>238</x>
      <y>28</y>
      <w>126</w>
      <h>119</h>
    </coordinates>
    <panel_attributes>Name
--
name
--
Name(name)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>574</x>
      <y>28</y>
      <w>182</w>
      <h>119</h>
    </coordinates>
    <panel_attributes>Radius
--
radius
minRadius
--
Radius(radius,minRadius)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>413</x>
      <y>28</y>
      <w>126</w>
      <h>119</h>
    </coordinates>
    <panel_attributes>Location
--
double[] location
--
Location(x,y)
getX()
getY()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>406</x>
      <y>140</y>
      <w>266</w>
      <h>315</h>
    </coordinates>
    <panel_attributes>lt=-
&lt; is radius of
m1=1</panel_attributes>
    <additional_attributes>10.0;420.0;140.0;420.0;140.0;220.0;360.0;220.0;360.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>406</x>
      <y>140</y>
      <w>77</w>
      <h>427</h>
    </coordinates>
    <panel_attributes>lt=-
&lt; is location of


m1=









1</panel_attributes>
    <additional_attributes>10.0;410.0;90.0;410.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>161</x>
      <y>140</y>
      <w>245</w>
      <h>588</h>
    </coordinates>
    <panel_attributes>lt=-
m2=1
is name of &gt;</panel_attributes>
    <additional_attributes>160.0;10.0;160.0;170.0;10.0;170.0;10.0;770.0;310.0;770.0;310.0;810.0;330.0;810.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>329</x>
      <y>140</y>
      <w>637</w>
      <h>322</h>
    </coordinates>
    <panel_attributes>lt=-

m2=1
is name of &gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;170.0;690.0;170.0;690.0;430.0;890.0;430.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>784</x>
      <y>28</y>
      <w>182</w>
      <h>119</h>
    </coordinates>
    <panel_attributes>Mass
--
mass
density
--
Mass(radius,density)
generateMass()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>406</x>
      <y>140</y>
      <w>483</w>
      <h>329</h>
    </coordinates>
    <panel_attributes>lt=-
&lt; is weight of
m1=1</panel_attributes>
    <additional_attributes>10.0;440.0;190.0;440.0;190.0;270.0;670.0;270.0;670.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1008</x>
      <y>28</y>
      <w>182</w>
      <h>119</h>
    </coordinates>
    <panel_attributes>HP
--
hp
--
Mass(minHP,maxHP)
generateHP()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>469</x>
      <y>140</y>
      <w>728</w>
      <h>574</h>
    </coordinates>
    <panel_attributes>lt=-
m2=1
&lt; is HP of</panel_attributes>
    <additional_attributes>1020.0;10.0;1020.0;740.0;10.0;740.0;10.0;800.0</additional_attributes>
  </element>
</diagram>
